<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:cassandra-db="http://www.mulesoft.org/schema/mule/cassandra-db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/cassandra-db http://www.mulesoft.org/schema/mule/cassandra-db/current/mule-cassandra-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<flow name="createTableFlow" doc:id="07983e69-7702-4673-b3b0-e478ca28dfa8" >
		<ee:transform doc:name="testData" doc:id="04bdebaa-c470-4947-9d4c-49cc0c33c560" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="testData" ><![CDATA[%dw 2.0
output application/java
import * from dw::core::Strings
var randomChar1=fromCharCode(randomInt(25) + 97)
var randomChar2=fromCharCode(randomInt(25) + 97)
var randomChar3=fromCharCode(randomInt(25) + 97)
var randomChar4=fromCharCode(randomInt(25) + 97)
var randomChar5=fromCharCode(randomInt(25) + 97)
fun randomColumnName()=
	randomChar1 ++ randomChar2 ++ randomChar3 ++ randomChar4 ++ randomChar5
var keys=["value1","value2"]
---
{
	name: "dummy_partitionKey",
	primaryKey: true,
	"type": "TEXT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	"int": "INT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	keyspaceName: "demo_keyspace",
	tableName: "dummy_table_name_1",
	tableName2: "dummy_table_name_2",
	randomColumn: randomColumnName(),
	column:"dummy_column_1",
	column2:"dummy_column_2",
	getValidEntity: {dummy_partitionKey : "value1",dummy_column_2 : "someValue" ++ randomColumnName()},
	getValidWhereClauseWithEq:{dummy_partitionKey : "value1"},
	getValidWhereClauseWithIN: {dummy_partitionKey: keys},
	getInvalidEntityForDelete:["invalid_column"],
	getInvalidWhereClause:{dummy_column_1 : "someValue"},
	getInvalidEntity: {"invalid_column" : "someValue"},
	getValidEntityForUpdate: {"dummy_column_2" : "updatedValue"},
	updatedValue: "updatedValue",
	getValidEntityForUpdate2:{"dummy_column_2" : "newValue"},
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="createTableInput" doc:id="cbb65cc2-3b82-4298-8ef5-8f823bd964fb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	columns: [{
		name: vars.testData.name,
		primaryKey: vars.testData.primaryKey,
		"type": vars.testData."type"
	},{
		name: vars.testData.column,
		"type": vars.testData.int
	},{
		name: vars.testData.column2,
		"type": vars.testData."type"
	}],
	keyspaceName: vars.testData.keyspaceName,
	tableName: vars.testData.tableName
} as Object {
	class : "org.mule.modules.cassandradb.api.CreateTableInput"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:create-table config-ref="Cassandra_Basic_Config">
        </cassandra-db:create-table>

	</flow>
	<flow name="createTableWithCompositePrimaryKeyFlow" doc:id="1a10373c-0bbb-40ef-ba71-aac775b38786">
		<ee:transform doc:name="testData" doc:id="2e057312-d725-4791-8aad-3fb19fa2ac66">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
import * from dw::core::Strings
var randomChar1=fromCharCode(randomInt(25) + 97)
var randomChar2=fromCharCode(randomInt(25) + 97)
var randomChar3=fromCharCode(randomInt(25) + 97)
var randomChar4=fromCharCode(randomInt(25) + 97)
var randomChar5=fromCharCode(randomInt(25) + 97)
fun randomColumnName()=
	randomChar1 ++ randomChar2 ++ randomChar3 ++ randomChar4 ++ randomChar5
var keys=["value1","value2"]
---
{
	name: "dummy_partitionKey",
	primaryKey: true,
	"type": "TEXT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	"int": "INT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	keyspaceName: "demo_keyspace",
	tableName: "dummy_table_name_1",
	tableName2: "dummy_table_name_2",
	randomColumn: randomColumnName(),
	column:"dummy_column_1",
	column2:"dummy_column_2",
	getValidEntity: {dummy_partitionKey : "value1",dummy_column_2 : "someValue" ++ randomColumnName()},
	getValidWhereClauseWithEq:{dummy_partitionKey : "value1"},
	getValidWhereClauseWithIN: {dummy_partitionKey:keys},
	getInvalidEntityForDelete:["invalid_column"],
	getInvalidWhereClause:{dummy_column_1 : "someValue"},
	getInvalidEntity: {"invalid_column" : "someValue"},
	newColumnName: "renamed"
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="createTableInput" doc:id="52fc18be-b5fc-4f33-ada5-11a92cb5f562">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	columns: [{
		name: vars.testData.name,
		primaryKey: vars.testData.primaryKey,
		"type": vars.testData."type"
	},{
		name: vars.testData.column,
		primaryKey: vars.testData.primaryKey,
		"type": vars.testData."type"
	}],
	keyspaceName: vars.testData.keyspaceName,
	tableName: vars.testData.tableName
} as Object {
	class : "org.mule.modules.cassandradb.api.CreateTableInput"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:create-table doc:name="Create table" doc:id="0d3121ac-8180-4525-a539-145c42e8142f" config-ref="Cassandra_Basic_Config" />
	</flow>
	<flow name="createTable2Flow" doc:id="35e3a1a6-08f1-47a1-9eef-4c750edc9c08">
		<ee:transform doc:name="testData" doc:id="f57f748e-71ee-41e2-9fad-cbf6735e3daa">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
import * from dw::core::Strings
var randomChar1=fromCharCode(randomInt(25) + 97)
var randomChar2=fromCharCode(randomInt(25) + 97)
var randomChar3=fromCharCode(randomInt(25) + 97)
var randomChar4=fromCharCode(randomInt(25) + 97)
var randomChar5=fromCharCode(randomInt(25) + 97)
fun randomColumnName()=
	randomChar1 ++ randomChar2 ++ randomChar3 ++ randomChar4 ++ randomChar5
---
{
	name: "dummy_partitionKey",
	primaryKey: true,
	"type": "TEXT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	"int": "INT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	keyspaceName: "demo_keyspace",
	keyspaceName3: "keyspaceName3",
	tableName: "dummy_table_name_1",
	tableName2: "dummy_table_name_2",
	randomColumn: randomColumnName(),
	column:"dummy_column_1",
	column2:"dummy_column_2",
	getValidEntity: {dummy_partitionKey : "value1",dummy_column_2 : "someValue"}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="createTableInput" doc:id="e4b7b86f-1114-4425-9aa4-985b5df22c61">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	columns: [{
		name: vars.testData.name,
		primaryKey: vars.testData.primaryKey,
		"type": vars.testData."type"
	},{
		name: vars.testData.column,
		"type": vars.testData.int
	},{
		name: vars.testData.column2,
		"type": vars.testData."type"
	}],
	keyspaceName: vars.testData.keyspaceName,
	tableName: vars.testData.tableName2
} as Object {
	class : "org.mule.modules.cassandradb.api.CreateTableInput"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:create-table doc:name="Create table" doc:id="036809ed-eca3-4418-aa10-be590bcba843" config-ref="Cassandra_Basic_Config" />
	</flow>
	<flow name="createTableOnlyOneColumnFlow" doc:id="aee66e30-546d-4dee-828e-35c25df361a4">
		<ee:transform doc:name="testData" doc:id="1e763d46-b2d5-4a24-b8bf-5a2acb294c59">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
import * from dw::core::Strings
var randomChar1=fromCharCode(randomInt(25) + 97)
var randomChar2=fromCharCode(randomInt(25) + 97)
var randomChar3=fromCharCode(randomInt(25) + 97)
var randomChar4=fromCharCode(randomInt(25) + 97)
var randomChar5=fromCharCode(randomInt(25) + 97)
fun randomColumnName()=
	randomChar1 ++ randomChar2 ++ randomChar3 ++ randomChar4 ++ randomChar5
var keys=["value1","value2"]
---
{
	name: "dummy_partitionKey",
	primaryKey: true,
	"type": "TEXT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	"int": "INT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	keyspaceName: "demo_keyspace",
	tableName: "dummy_table_name_1",
	tableName2: "dummy_table_name_2",
	randomColumn: randomColumnName(),
	column:"dummy_column_1",
	column2:"dummy_column_2",
	getValidEntity: {dummy_partitionKey : "value1",dummy_column_2 : "someValue" ++ randomColumnName()},
	getValidWhereClauseWithEq:{dummy_partitionKey : "value1"},
	getValidWhereClauseWithIN: {dummy_partitionKey:keys},
	getInvalidEntityForDelete:["invalid_column"],
	getInvalidWhereClause:{dummy_column_1 : "someValue"}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="createTableInput" doc:id="1bbcc315-78d6-45b4-8c94-a470f84920d2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	columns: [{
		name: vars.testData.name,
		primaryKey: vars.testData.primaryKey,
		"type": vars.testData."type"
	}],
	keyspaceName: vars.testData.keyspaceName,
	tableName: vars.testData.tableName
} as Object {
	class : "org.mule.modules.cassandradb.api.CreateTableInput"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:create-table doc:name="Create table" doc:id="333b0bae-c5e0-4e19-a4ff-e7cbbf46bd63" config-ref="Cassandra_Basic_Config" />
	</flow>
	<flow name="createTable2OnlyOneColumnFlow" doc:id="447b0b15-02a4-4266-b5e9-461bc18e80a6">
		<ee:transform doc:name="testData" doc:id="b7d08843-6d99-40c6-80a3-de653cd7b64c">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
import * from dw::core::Strings
var randomChar1=fromCharCode(randomInt(25) + 97)
var randomChar2=fromCharCode(randomInt(25) + 97)
var randomChar3=fromCharCode(randomInt(25) + 97)
var randomChar4=fromCharCode(randomInt(25) + 97)
var randomChar5=fromCharCode(randomInt(25) + 97)
fun randomColumnName()=
	randomChar1 ++ randomChar2 ++ randomChar3 ++ randomChar4 ++ randomChar5
var keys=["value1","value2"]
---
{
	name: "dummy_partitionKey",
	primaryKey: true,
	"type": "TEXT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	"int": "INT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	keyspaceName: "demo_keyspace",
	tableName: "dummy_table_name_1",
	tableName2: "dummy_table_name_2",
	randomColumn: randomColumnName(),
	column:"dummy_column_1",
	column2:"dummy_column_2",
	getValidEntity: {dummy_partitionKey : "value1",dummy_column_2 : "someValue" ++ randomColumnName()},
	getValidWhereClauseWithEq:{dummy_partitionKey : "value1"},
	getValidWhereClauseWithIN: {dummy_partitionKey:keys},
	getInvalidEntityForDelete:["invalid_column"],
	getInvalidWhereClause:{dummy_column_1 : "someValue"}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="createTableInput" doc:id="6158e734-a31d-4864-9c61-e00613701bad">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	columns: [{
		name: vars.testData.name,
		primaryKey: vars.testData.primaryKey,
		"type": vars.testData."type"
	}],
	keyspaceName: vars.testData.keyspaceName,
	tableName: vars.testData.tableName2
} as Object {
	class : "org.mule.modules.cassandradb.api.CreateTableInput"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:create-table doc:name="Create table" doc:id="e5ee3fb8-f8b8-4886-9f9a-faadfe555f70" config-ref="Cassandra_Basic_Config" />
	</flow>
	<flow name="createTableWKeyspaceName3" doc:id="53ca3fee-1d94-405d-b4cd-d924ac91dd7b">
		<ee:transform doc:name="testData" doc:id="970a0efb-4f88-40b2-873e-dc97960237a4">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
import * from dw::core::Strings
var randomChar1=fromCharCode(randomInt(25) + 97)
var randomChar2=fromCharCode(randomInt(25) + 97)
var randomChar3=fromCharCode(randomInt(25) + 97)
var randomChar4=fromCharCode(randomInt(25) + 97)
var randomChar5=fromCharCode(randomInt(25) + 97)
fun randomColumnName()=
	randomChar1 ++ randomChar2 ++ randomChar3 ++ randomChar4 ++ randomChar5
---
{
	name: "dummy_partitionKey",
	primaryKey: true,
	"type": "TEXT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	"int": "INT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	keyspaceName: "demo_keyspace",
	keyspaceName3: "keyspaceName3",
	tableName: "dummy_table_name_1",
	tableName2: "dummy_table_name_2",
	randomColumn: randomColumnName(),
	column:"dummy_column_1",
	column2:"dummy_column_2"
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="createTableInput" doc:id="b50496c7-7d1e-49c3-9283-96c946013e55">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	columns: [{
		name: vars.testData.name,
		primaryKey: vars.testData.primaryKey,
		"type": vars.testData."type"
	},{
		name: vars.testData.column,
		"type": vars.testData.int
	},{
		name: vars.testData.column2,
		"type": vars.testData."type"
	}],
	keyspaceName: vars.testData.keyspaceName3,
	tableName: vars.testData.tableName
} as Object {
	class : "org.mule.modules.cassandradb.api.CreateTableInput"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:create-table doc:name="Create table" doc:id="f5e4a412-8c34-4f30-a07e-802f1f09521d" config-ref="Cassandra_Basic_Config" />
	</flow>
	<flow name="createTableWKeyspaceName3AndTableName2" doc:id="0f7634fb-3377-47a0-a860-4128aadf6cef">
		<ee:transform doc:name="testData" doc:id="e91fc2fb-c030-4734-af08-ea804fe803e9">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
import * from dw::core::Strings
var randomChar1=fromCharCode(randomInt(25) + 97)
var randomChar2=fromCharCode(randomInt(25) + 97)
var randomChar3=fromCharCode(randomInt(25) + 97)
var randomChar4=fromCharCode(randomInt(25) + 97)
var randomChar5=fromCharCode(randomInt(25) + 97)
fun randomColumnName()=
	randomChar1 ++ randomChar2 ++ randomChar3 ++ randomChar4 ++ randomChar5
---
{
	name: "dummy_partitionKey",
	primaryKey: true,
	"type": "TEXT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	"int": "INT" as Enum {
			class: "org.mule.modules.cassandradb.api.ColumnType"
		},
	keyspaceName: "demo_keyspace",
	keyspaceName3: "keyspaceName3",
	tableName: "dummy_table_name_1",
	tableName2: "dummy_table_name_2",
	randomColumn: randomColumnName(),
	column:"dummy_column_1",
	column2:"dummy_column_2"
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="createTableInput" doc:id="d9b3c70e-d097-4ddc-9fd1-2866bf6f351a">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	columns: [{
		name: vars.testData.name,
		primaryKey: vars.testData.primaryKey,
		"type": vars.testData."type"
	},{
		name: vars.testData.column,
		"type": vars.testData.int
	},{
		name: vars.testData.column2,
		"type": vars.testData."type"
	}],
	keyspaceName: vars.testData.keyspaceName3,
	tableName: vars.testData.tableName2
} as Object {
	class : "org.mule.modules.cassandradb.api.CreateTableInput"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:create-table doc:name="Create table" doc:id="ae4d878f-ac9b-4e97-abf3-310db3f429a8" config-ref="Cassandra_Basic_Config" />
	</flow>
	<flow name="createKeyspaceFlow" doc:id="1691ab16-d613-4512-bb27-f8f66148364a">
		<ee:transform doc:name="testData" doc:id="7cc6c99c-c882-4f1a-a764-f0946a00090f">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
---
{
	keyspacename1: "keyspaceName1",
	keyspacename2: "keyspaceName2",
	keyspacename3: "keyspaceName3",
	dataCenterName: "datacenter1",
	simpleStrategy: "SimpleStrategy" as Enum {
			class: "org.mule.modules.cassandradb.api.ReplicationStrategy"
		},
	networkTopologyStrategy: "NetworkTopologyStrategy" as Enum {
			class: "org.mule.modules.cassandradb.api.ReplicationStrategy"
		}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="keyspaceInput" doc:id="fb783e06-3ecd-487b-ab7c-36526057bd04">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	keyspaceName: vars.testData.keyspacename3
} as Object {
	class : "org.mule.modules.cassandradb.api.CreateKeyspaceInput"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:create-keyspace doc:name="Create keyspace" doc:id="348ce0c1-6081-4067-bd5a-1346c144116c" config-ref="Cassandra_Basic_Config" />
	</flow>
	<flow name="cleanKeyspacesFlow" doc:id="7d1e5a41-0360-45da-94ac-b385faf0b357" >
		<ee:transform doc:name="testData" doc:id="07b5c00c-ac5f-43af-993a-61631c5acbb4">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="testData"><![CDATA[%dw 2.0
output application/java
---
{
	keyspacename1: "keyspaceName1",
	keyspacename2: "keyspaceName2",
	keyspacename3: "keyspaceName3",
	dataCenterName: "datacenter1",
	simpleStrategy: "SimpleStrategy" as Enum {
			class: "org.mule.modules.cassandradb.api.ReplicationStrategy"
		},
	networkTopologyStrategy: "NetworkTopologyStrategy" as Enum {
			class: "org.mule.modules.cassandradb.api.ReplicationStrategy"
		}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<cassandra-db:drop-keyspace doc:name="Drop keyspace" doc:id="272d1cff-1012-43f9-8ee3-3f22974fa4fa" config-ref="Cassandra_Basic_Config" >
			<cassandra-db:keyspace-name ><![CDATA[#[vars.testData.keyspacename1]]]></cassandra-db:keyspace-name>
		</cassandra-db:drop-keyspace>
		<cassandra-db:drop-keyspace doc:name="Drop keyspace" doc:id="b85eb768-b988-4054-b61c-881dc949a9b9" config-ref="Cassandra_Basic_Config" >
			<cassandra-db:keyspace-name ><![CDATA[#[vars.testData.keyspacename2]]]></cassandra-db:keyspace-name>
		</cassandra-db:drop-keyspace>
		<cassandra-db:drop-keyspace doc:name="Drop keyspace" doc:id="b6afa3cd-3328-47f6-8fb9-d91e2e0f8ad3" config-ref="Cassandra_Basic_Config" >
			<cassandra-db:keyspace-name ><![CDATA[#[vars.testData.keyspacename3]]]></cassandra-db:keyspace-name>
		</cassandra-db:drop-keyspace>
	</flow>
	<flow name="dropTableFlow" doc:id="397c9a02-5181-4cc5-b0ed-673f794ac8a3" >
		<cassandra-db:drop-table doc:name="Drop table" doc:id="530700fa-83e2-4431-b8e3-ab16c1f9e5d4" config-ref="Cassandra_Basic_Config" keyspaceName="#[vars.testData.keyspaceName]" >
			<cassandra-db:table-name ><![CDATA[#[vars.testData.tableName]]]></cassandra-db:table-name>
		</cassandra-db:drop-table>
		<cassandra-db:drop-table doc:name="Drop table" doc:id="383a60e7-2255-4b7b-95a8-170f615d5b1e" config-ref="Cassandra_Basic_Config" keyspaceName="#[vars.testData.keyspaceName]" >
			<cassandra-db:table-name ><![CDATA[#[vars.testData.tableName2]]]></cassandra-db:table-name>
		</cassandra-db:drop-table>
	</flow>
	<flow name="dropTableFlowDifferentKeyspace" doc:id="bda54d33-d777-4099-a658-3b3fb328a3b5" >
		<cassandra-db:drop-table doc:name="Drop table" doc:id="e46f4d21-9c7c-4d20-a156-4cee168e5caf" config-ref="Cassandra_Basic_Config" keyspaceName="#[vars.testData.keyspaceName3]" >
			<cassandra-db:table-name ><![CDATA[#[vars.testData.tableName]]]></cassandra-db:table-name>
		</cassandra-db:drop-table>
		<cassandra-db:drop-table doc:name="Drop table" doc:id="97cd232a-0867-4a29-ab7d-bee7c18ec41a" config-ref="Cassandra_Basic_Config" keyspaceName="#[vars.testData.keyspaceName3]" >
			<cassandra-db:table-name ><![CDATA[#[vars.testData.tableName2]]]></cassandra-db:table-name>
		</cassandra-db:drop-table>
	</flow>
</mule>
